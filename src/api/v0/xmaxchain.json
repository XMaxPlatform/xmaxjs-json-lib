{
    "get_account": {
        "breif":"Get an account's information in blockchain.",
        "params":{
            "account_name": "name"
        },
        "results": {
            "account_name": "name",
            "xmx_token": "uint64"
        }
    },
    "get_info": {
        "breif":"Get blockchain infomation.",
        "params":null,
        "results": {
            "server_version": "string",
            "head_block_num": "uint32",
            "last_irreversible_block_num": "uint32",
            "head_block_id": "fixed_bytes32",
            "head_block_time": "time"

        }
    },
    "get_block": {
        "breif":"Get specific block info use id or block num.",
        "params": {
            "block_num_or_id": "string"
        },
        "results": {
            "previous": "fixed_bytes32",
            "timestamp": "time",
            "transaction_merkle_root": "fixed_bytes32",
            "builder": "name",
            "builder_signature": "signature",
            "threads": "thread[]",
            "id": "fixed_bytes32",
            "block_num": "uint32",
            "ref_block_prefix": "uint32"
        },
        "errors": {
            "unknown block": null
          }
    },
    "get_table_rows": {
        "brief": "Retrive contract data from an account.",
        "params": {
            "json": { "type": "bool", "default": false},
            "scope": "name",
            "code": "name",
            "table": "name",
            "table_key": "string",
            "lower_bound": {"type": "uint64", "default": "0"},
            "upper_bound": {"type": "uint64", "default": "-1"},
            "limit": {"type": "uint32", "default": "10"}
        },
        "results": {
            "rows": {
                "type": "vector",
                "doc": "one row per item, either encoded as hex String or JSON object"
            },
            "more": {
                "type": "bool",
                "doc": "true if last element"
            }
        }
    },

    "get_code": {
        "brief": "Get smart contract code.",
        "params": {
            "account_name": "name"
        },
        "results": {
            "account_name": "name",
            "wast": "string",
            "code_hash": "fixed_bytes32",
            "abi": "optional<abi>"
        }
    },

    "get_required_keys": {
        "brief": "Get keys for signing transactions from provide candidates public keys.",
        "params": {
          "transaction": "transaction",
          "available_keys": "set[public_key]"
        },
        "results": "set[public_key]"
      },
    
    "push_transaction": {
        "brief": "Push a transaction to blockchain.",
        "params": {
            "signed_transaction": "signed_transaction"
          },
          "results": {
            "transaction_id": "fixed_bytes32",
            "processed": "bytes",
            "events": "bytes"
          }
    },

    "push_transactions": {
        "brief": "Push multiple transactions to blockchain to process.",
        "params": {
          "signed_transaction[]": "signed_transaction"
        },
        "results": "vector[push_transaction.results]"
      }

}